#转录组基因下载（flybase数据库）：http://flybase.org/cgi-bin/get_static_page.pl?file=bulkdata7.html&title=Current%20Release（Transposable elements (canonical set)）
#CG9754 and Piwi序列下载：https://www.ncbi.nlm.nih.gov/geo/  查询序列号：GSE71374，找到GSM号
                         https://sra-explorer.info/   查询GSM号，找到下载链接


bin_trim_galore=trim_galore
dir="clean"
fq1="RNAseq/RP_1_1.clean.fq.gz"
fq2="RNAseq/S7_20_1_1.clean.fq.gz"
$bin_trim_galore -q 25 --phred33 --length 36 -e 0.1 --stringency 3 --paired -o $dir $fq1 $fq2

#clean中 --length最短应为20；切除接头后，再切除7个碱基（这个read的特点）
#embl 转为 fasta 用python seqIO 
#--paired 是双端测序，单端不加此参数
#--three_prime_clip_R1 <int>     Instructs Trim Galore to remove <int> bp from the 3' end of read 1 (or single-end
                        reads) AFTER adapter/quality trimming has been performed. This may remove some unwanted
                        bias from the 3' end that is not directly related to adapter sequence or basecall quality.
                        Default: OFF.

fasta 是建立索引需要的总gene gtf/gff是注释信息，embl中含有fasta和gff两个文件信息
#SeqIO：embl转为fasta
from Bio import SeqIO

with open("transposon_sequence_set.embl.txt", "rU") as input_handle, open("transposon_sequence_set.embl.fasta", "w") as output_handle:
    sequences = SeqIO.parse(input_handle, "embl")
    count = SeqIO.write(sequences, output_handle, "fasta")

print("Converted %i records" % count)


#setp：
ls ../RNAseq/*gz |while read id;do(zcat $id|head -1000> $(basename $id ".gz"));done

#建立索引
STAR --runThreadN 6 --runMode genomeGenerate \
--genomeDir #输出文件夹 \
--genomeFastaFiles #参考基因所在文件夹和文件名 \
--sjdbGTFfile #注释基因所在文件夹和文件名 \
--sjdbOverhang 100

#--sjdbGTFtagExonParentTranscript （注释文件为GFF3时）
#--sjdbFileChrStartEnd /path/to/sjdbFile.txt （用于txt的注释文件，包括 ：Chr \tab Start \tab End \tab Strand=+/-/. ）
#不用GTF建立索引，需要去掉--sjdbGTFfile 和--sjdbOverhang 100
#针对小的基因组，可以调整genomeSAindexNbases 6   （对于小基因组，参数--genomeSAindexNbase必须缩小，典型值为min(14，log2(GenomeLength)/2-1)。例如，对于1兆碱基的基因组，这等于9，对于100千碱基的基因组，这等于7）
#--genomeChrBinNbits （针对大型基因组，--genomeChrBinNbits = min(18,log2[max(GenomeLength/NumberOfReferences,ReadLength)])。例如，对于具有100,000条染色体/支架的3Gigabase基因组，这等于15。）

#复杂比对
nohup STAR --runThreadN 5 -- genomeDir /media/DATA/qzh/data/maize_STAR_genome \
--readFilesCommand zcat \
--readFilesIn /media/DATA/qzh/data/RNAseq/S7_20_3_1.clean.fq.gz \
/media/DATA/qzh/data/RNAseq/S7_20_3_2.clean.fq.gz \
--outFileNamePrefix /media/DATA/qzh/data/align_out/S7_20_3_ \
--outSAMtype BAM SortedByCoordinate \
--outBAMsortingThreadN 5 \
--quantMode TranscriptomeSAM GeneCounts &

#--outSAMtype BAM SortedByCoordinate  输出BAM文件，输出BAM以坐标方式排序
#--readFilesCommand UncompressionCommand 如果文件是压缩文件，则用此选项，例如：文件为 .gzip ，则--readFilesCommand zcat ；对于bzip2压缩文件，使用--readFilesCommand bunzip2-c。
#如果在建立索引时，不用gtf等注释文件，则不能用quantMode 因为此文件的生成，需要GTF文件。同时，没有此选项生成的Aligned.toTranscriptome.out.bam（输出SAM/BAM比对以将其转录到单独的文件中），则不能进行rsem分析


#如果没有GTF文件，则可以用featureCounts
#featureCounts -M -O --fraction -g gene_id -t exon -s 0 -a in.gtf -o out.txt in.bam
#featureCounts -a transposon_sequence_set.embl.gtf -M -O --fraction -g gene_id -t gene -s 0 -o out.txt CG_1Aligned.sortedByCoord.out.bam 

#取CG_1,CG_2和Piwi_1,Piwi_2的两个的平均数
#进入Rstudio：
#读取文件
A_data <- read.table("A.txt", header = T, row.names = 1)

#取整
A_data <- round(A_data, digits = 0)

#取log10
B_data <- log(A_data,10)

p <- ggplot(B_data,aes(x=CG,y=Piwi)) +
  geom_point() +
  geom_abline(slope = 1,intercept = 0,colour = "blue") +
  # xlim(0,6) +
  # ylim(0,6) +  #设置x轴，y轴极限
  labs(x = "CG9754 KD [log10 rpm]", y = "Piwi KD [log10 rpm]", title = "steasy-state RNA(RNA-seq)") +
  theme(panel.grid =element_blank())

library(dplyr)
library(ggplot2)

p <- p + 
  scale_x_continuous(limits = c(0, 6), expand = c(0, 0)) +   #设置x轴，y轴极限，expand（0，0） 0后的区域（负值）不显示
  scale_y_continuous(limits = c(0, 6), expand = c(0, 0))

# add labels
# foldchange > 2

df <- B_data %>%
  mutate(fc = log2(CG / (Piwi)))
df$name <- rownames(B_data)

p +
  geom_text(data = filter(df, fc < -0.4), aes(CG, Piwi, label = name))   #filter：以fc筛选数据   aes显示基因名字




构图
R package: tidyverse

dplyr

https://dplyr.tidyverse.org/reference/index.html

https://r-graphics.org/index.html

#确定横纵坐标
hw_sp <- ggplot(A_data,aes(x=CG,y=Piwi))

> hw_sp +
+     geom_point() + #输出图片
+     stat_smooth(method = lm,se=FALSE,colour = "blue") +  #一条趋势线
+     coord_trans(x="log10",y="log10") + #横纵坐标的log10 
+     geom_abline(slope = 1,intercept = 0,colour = "blue") + #画一条截距为0，斜率为1的直线
+     labs(x = "CG9754 KD [log10 rpm]", y = "Piwi KD [log10 rpm]", title = "steasy-state RNA(RNA-seq)") +  #x轴y轴重新命名
+     theme_bw() +
+     theme(panel.grid =element_blank()) +  #删除网格线
+     theme(axis.text = element_blank()) + #删除所有刻度
+     theme(axis.ticks = element_blank()) #删除刻度线




